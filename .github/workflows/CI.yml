name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [main, develop]

jobs:
  # common health check
  health-check:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: .nvmrc
        cache: npm

    - name: Install dependencies
      run: npm ci

    - name: Set Env Staging
      run: npm run env staging

    - name: Tests
      run: npm test

    - name: Check Lint
      run: npm run lint

    - name: Check Types
      run: npm run types


  android:
    needs: health-check
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: .nvmrc
        cache: npm

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: 11
        distribution: temurin

    - name: Cache Gradle Wrapper
      uses: actions/cache@v3
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Install dependencies
      run: npm ci

    - name: Set Env Staging
      run: npm run env staging

    - name: Build with Gradle
      run: npm run android build

    - name: Save Artifact
      uses: actions/upload-artifact@v3
      with:
        name: android
        path: android/app/build/outputs/apk/release/*.apk

  ios:
    needs: health-check
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: .nvmrc
        cache: npm

    - name: Prepare iOS Keychain
      run: ./scripts.sh setup-ios
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        BUILD_DEV_CERTIFICATE_BASE64: ${{ secrets.BUILD_DEV_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: "some-password-dont-matter"

    - name: Install dependencies
      run: npm ci

    - name: Cache Pods
      uses: actions/cache@v3
      with:
        path: ./ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}

    - name: Cache Derived Data
      uses: actions/cache@v3
      with:
        path: ./ios/DerivedData
        key: ${{ runner.os }}-derived-data-${{ hashFiles('ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-derived-data-

    - name: Pod Install
      run: cd ios; pod install

    - name: Set Env Staging
      run: npm run env staging

    - name: Build iOS Archive
      run: npm run ios archive
